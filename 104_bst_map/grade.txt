Grading at 11/15/2024:18:41:36.334064
For commit ID 80e70a2716835f87050c1c8e16230a1290a00c64
Grading at Fri Nov 15 01:41:34 PM EST 2024
-----------------------------------------------
testcase 1 : Testing with BstMap<int,int>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<int, int>’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = int; V = int]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = int; V = int]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 2 : Testing with BstMap<int,std::string>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<int, std::__cxx11::basic_string<char> >’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = int; V = std::__cxx11::basic_string<char>]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = int; V = std::__cxx11::basic_string<char>]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 3 : Testing with BstMap<int,(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<int, Tester>’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = int; V = Tester]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = int; V = Tester]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 4 : Testing with BstMap<std::string,int>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<std::__cxx11::basic_string<char>, int>’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = std::__cxx11::basic_string<char>; V = int]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = std::__cxx11::basic_string<char>; V = int]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 5 : Testing with BstMap<std::string,std::string>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = std::__cxx11::basic_string<char>; V = std::__cxx11::basic_string<char>]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = std::__cxx11::basic_string<char>; V = std::__cxx11::basic_string<char>]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 6 : Testing with BstMap<std::string,(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<std::__cxx11::basic_string<char>, Tester>’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = std::__cxx11::basic_string<char>; V = Tester]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = std::__cxx11::basic_string<char>; V = Tester]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 7 : Testing with BstMap<(a custom class we wrote),int>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<Tester, int>’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = Tester; V = int]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = Tester; V = int]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 8 : Testing with BstMap<(a custom class we wrote),std::string>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<Tester, std::__cxx11::basic_string<char> >’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = Tester; V = std::__cxx11::basic_string<char>]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = Tester; V = std::__cxx11::basic_string<char>]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.
-----------------------------------------------
testcase 9 : Testing with BstMap<(a custom class we wrote),(a custom class we wrote)>
...compiling...
In file included from 89-tester.cpp:1:
bstmap.h: In instantiation of ‘class BstMap<Tester, Tester>’:
89-tester.cpp:70:33:   required from here
bstmap.h:107:13: error: looser exception specification on overriding virtual function ‘const V& BstMap<K, V>::lookup(const K&) const [with K = Tester; V = Tester]’
  107 |   const V & lookup(const K & key) const { return lookup(root, key); }
      |             ^~~~~~
In file included from bstmap.h:7,
                 from 89-tester.cpp:1:
map.h:9:21: note: overridden function is ‘const V& Map<K, V>::lookup(const K&) const throw (std::invalid_argument) [with K = Tester; V = Tester]’
    9 |   virtual const V & lookup(const K& key) const throw (std::invalid_argument) = 0;
      |                     ^~~~~~
The code did not compile.  This test failed.

Overall Grade: F
