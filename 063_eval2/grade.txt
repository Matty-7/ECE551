Grading at 10/27/2024:03:30:34.626093
For commit ID 4fb0583c69e7d6706eebf37332d5f7143a6c4943
Grading at Sat Oct 26 11:30:31 PM EDT 2024
Doing some basic checking for your submission

Step 1
Checking that story-step1 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step1.c
gcc -o story-step1 story-step1.o rand_story.o provided.o
rm story-step1.o
The code compiled (good)
Executable story-step1 exists (good)
Checking with provided test case story.txt
Your file matched the expected output
Now running YOUR tests for step 1

1.1: Current test is story-step1 story.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 2
Checking that story-step2 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step2.c
gcc -o story-step2 story-step2.o rand_story.o provided.o
rm story-step2.o
The code compiled (good)
Executable story-step2 exists (good)
Now running YOUR tests for step 2

2.1: Current test is story-step2 words.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind was clean

Step 3
Checking that story-step3 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step3.c
gcc -o story-step3 story-step3.o rand_story.o provided.o
rm story-step3.o
The code compiled (good)
Executable story-step3 exists (good)
Now running YOUR tests for step 3

3.1: Current test is story-step3 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==253842== Memcheck, a memory error detector
==253842== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==253842== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==253842== Command: ./story-step3 words.txt story2.txt
==253842== Parent PID: 253841
==253842== 
==253842== 
==253842== HEAP SUMMARY:
==253842==     in use at exit: 28 bytes in 4 blocks
==253842==   total heap usage: 47 allocs, 43 frees, 14,127 bytes allocated
==253842== 
==253842== 28 bytes in 4 blocks are definitely lost in loss record 1 of 1
==253842==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==253842==    by 0x490B58E: strdup (strdup.c:42)
==253842==    by 0x10A110: processStoryTemplate (rand_story.c:228)
==253842==    by 0x109428: main (story-step3.c:16)
==253842== 
==253842== LEAK SUMMARY:
==253842==    definitely lost: 28 bytes in 4 blocks
==253842==    indirectly lost: 0 bytes in 0 blocks
==253842==      possibly lost: 0 bytes in 0 blocks
==253842==    still reachable: 0 bytes in 0 blocks
==253842==         suppressed: 0 bytes in 0 blocks
==253842== 
==253842== For lists of detected and suppressed errors, rerun with: -s
==253842== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Step 4
Checking that story-step4 compiles
rm -f *~ story-step1 story-step2 story-step3 story-step4 story-step1.o story-step2.o story-step3.o story-step4.o rand_story.o
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c rand_story.c
gcc -std=gnu99 -pedantic -Wall -Werror -ggdb3 -c story-step4.c
gcc -o story-step4 story-step4.o rand_story.o provided.o
rm story-step4.o
The code compiled (good)
Executable story-step4 exists (good)
Now running YOUR tests for step 4

4.1: Current test is story-step4 words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==253908== Memcheck, a memory error detector
==253908== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==253908== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==253908== Command: ./story-step4 words.txt story2.txt
==253908== Parent PID: 253907
==253908== 
==253908== 
==253908== HEAP SUMMARY:
==253908==     in use at exit: 28 bytes in 4 blocks
==253908==   total heap usage: 47 allocs, 43 frees, 14,127 bytes allocated
==253908== 
==253908== 28 bytes in 4 blocks are definitely lost in loss record 1 of 1
==253908==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==253908==    by 0x490B58E: strdup (strdup.c:42)
==253908==    by 0x10A1A8: processStoryTemplate (rand_story.c:228)
==253908==    by 0x1094C0: main (story-step4.c:30)
==253908== 
==253908== LEAK SUMMARY:
==253908==    definitely lost: 28 bytes in 4 blocks
==253908==    indirectly lost: 0 bytes in 0 blocks
==253908==      possibly lost: 0 bytes in 0 blocks
==253908==    still reachable: 0 bytes in 0 blocks
==253908==         suppressed: 0 bytes in 0 blocks
==253908== 
==253908== For lists of detected and suppressed errors, rerun with: -s
==253908== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

4.2: Current test is story-step4 -n words.txt story2.txt
-----------------------------
Your output looks good. Lets check valgrind
Valgrind reported errors or memory leaks:
==253949== Memcheck, a memory error detector
==253949== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==253949== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==253949== Command: ./story-step4 -n words.txt story2.txt
==253949== Parent PID: 253948
==253949== 
==253949== 
==253949== HEAP SUMMARY:
==253949==     in use at exit: 28 bytes in 4 blocks
==253949==   total heap usage: 49 allocs, 45 frees, 14,143 bytes allocated
==253949== 
==253949== 28 bytes in 4 blocks are definitely lost in loss record 1 of 1
==253949==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==253949==    by 0x490B58E: strdup (strdup.c:42)
==253949==    by 0x10A1A8: processStoryTemplate (rand_story.c:228)
==253949==    by 0x1094C0: main (story-step4.c:30)
==253949== 
==253949== LEAK SUMMARY:
==253949==    definitely lost: 28 bytes in 4 blocks
==253949==    indirectly lost: 0 bytes in 0 blocks
==253949==      possibly lost: 0 bytes in 0 blocks
==253949==    still reachable: 0 bytes in 0 blocks
==253949==         suppressed: 0 bytes in 0 blocks
==253949== 
==253949== For lists of detected and suppressed errors, rerun with: -s
==253949== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

You have NOT passed your test cases!
You should go and figure out/understand where thing went wrong
And fix the problem(s) before the deadline

Overall Grade: NO GRADE YET
